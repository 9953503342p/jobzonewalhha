{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\candidate\\\\sections\\\\resume\\\\section-can-attachment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SectionCanAttachment() {\n  _s();\n  const [message, setMessage] = useState('');\n\n  // Configure the dropzone component to upload to the correct API endpoint\n  const onDrop = acceptedFiles => {\n    // Create a new FormData instance\n    const formData = new FormData();\n\n    // Append the file to FormData (for a single file upload)\n    acceptedFiles.forEach(file => {\n      formData.append('resumefile', file); // Append file directly (not the file path)\n      console.log(file); // Check the file data\n    });\n\n    // Make the API request to upload the file\n    fetch(`${process.env.React_App_url}/upload-resume`, {\n      method: 'POST',\n      body: formData,\n      credentials: 'include' // If you're sending cookies like candidateId\n    }).then(response => response.json()).then(data => {\n      console.log('File uploaded successfully:', data);\n      // Display success message\n      setMessage('File uploaded successfully!');\n    }).catch(error => {\n      console.error('Error uploading file:', error);\n      // Display error message\n      setMessage('Error uploading file.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-heading wt-panel-heading p-a20 panel-heading-with-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"panel-tittle m-a0\",\n        children: \"Attach Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-body wt-panel-body p-a20\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twm-panel-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Resume is the most important document recruiters look for. Recruiters generally do not look at profiles without resumes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-cover-pic\",\n          children: /*#__PURE__*/_jsxDEV(Dropzone, {\n            onDrop: onDrop,\n            accept: \".pdf,.doc,.docx,.txt\",\n            maxFiles: 1,\n            children: ({\n              getRootProps,\n              getInputProps\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ...getRootProps(),\n              className: \"dropzone\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Drag & drop a resume here, or click to select a file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '10px',\n            marginTop: '20px',\n            borderRadius: '5px',\n            backgroundColor: message.includes('success') ? '#28a745' : '#f8d7da',\n            color: message.includes('success') ? 'white' : '#721c24',\n            border: message.includes('success') ? '1px solid #28a745' : '1px solid #f5c6cb'\n          },\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(SectionCanAttachment, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = SectionCanAttachment;\nexport default SectionCanAttachment;\nvar _c;\n$RefreshReg$(_c, \"SectionCanAttachment\");","map":{"version":3,"names":["React","useState","Dropzone","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionCanAttachment","_s","message","setMessage","onDrop","acceptedFiles","formData","FormData","forEach","file","append","console","log","fetch","process","env","React_App_url","method","body","credentials","then","response","json","data","catch","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","accept","maxFiles","getRootProps","getInputProps","style","padding","marginTop","borderRadius","backgroundColor","includes","color","border","_c","$RefreshReg$"],"sources":["C:/Project/TF-jobzilla/jobzilla-react/src/app/pannels/candidate/sections/resume/section-can-attachment.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\n\nfunction SectionCanAttachment() {\n    const [message, setMessage] = useState('');\n\n    // Configure the dropzone component to upload to the correct API endpoint\n    const onDrop = (acceptedFiles) => {\n        // Create a new FormData instance\n        const formData = new FormData();\n    \n        // Append the file to FormData (for a single file upload)\n        acceptedFiles.forEach((file) => {\n            formData.append('resumefile', file); // Append file directly (not the file path)\n            console.log(file); // Check the file data\n        });\n    \n        // Make the API request to upload the file\n        fetch(`${process.env.React_App_url}/upload-resume`, {\n            method: 'POST',\n            body: formData,\n            credentials: 'include', // If you're sending cookies like candidateId\n        })\n        .then((response) => response.json())\n        .then((data) => {\n            console.log('File uploaded successfully:', data);\n            // Display success message\n            setMessage('File uploaded successfully!');\n        })\n        .catch((error) => {\n            console.error('Error uploading file:', error);\n            // Display error message\n            setMessage('Error uploading file.');\n        });\n    };\n    \n    return (\n        <>\n            <div className=\"panel-heading wt-panel-heading p-a20 panel-heading-with-btn\">\n                <h4 className=\"panel-tittle m-a0\">Attach Resume</h4>\n            </div>\n            <div className=\"panel-body wt-panel-body p-a20\">\n                <div className=\"twm-panel-inner\">\n                    <p>Resume is the most important document recruiters look for. Recruiters generally do not look at profiles without resumes.</p>\n                    <div className=\"dashboard-cover-pic\">\n                        {/* Dropzone for file upload */}\n                        <Dropzone\n                            onDrop={onDrop}\n                            accept=\".pdf,.doc,.docx,.txt\"\n                            maxFiles={1}\n                        >\n                            {({ getRootProps, getInputProps }) => (\n                                <div {...getRootProps()} className=\"dropzone\">\n                                    <input {...getInputProps()} />\n                                    <p>Drag & drop a resume here, or click to select a file</p>\n                                </div>\n                            )}\n                        </Dropzone>\n                    </div>\n                    {/* Display message with inline styles */}\n                    {message && (\n                        <div\n                            style={{\n                                padding: '10px',\n                                marginTop: '20px',\n                                borderRadius: '5px',\n                                backgroundColor: message.includes('success') ? '#28a745' : '#f8d7da',\n                                color: message.includes('success') ? 'white' : '#721c24',\n                                border: message.includes('success') ? '1px solid #28a745' : '1px solid #f5c6cb',\n                            }}\n                        >\n                            {message}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default SectionCanAttachment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}