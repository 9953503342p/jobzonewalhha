{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\jobs\\\\section-jobs-grid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport SectionPagination from \"../common/section-pagination\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SectionJobsGrid({\n  perPage\n}) {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/post-job\").then(response => response.json()).then(data => setJobs(data)).catch(error => console.error(\"Error fetching jobs:\", error));\n  }, []);\n  const getDateDifference = date => {\n    const now = new Date();\n    const dateParts = date.split(\"/\");\n    if (dateParts.length === 3) {\n      date = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;\n    }\n    const targetDate = new Date(date);\n    if (isNaN(targetDate)) {\n      console.error(\"Invalid date:\", date);\n      return {\n        diffDays: 0,\n        diffMonths: 0\n      };\n    }\n    const diffTime = now - targetDate;\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n    const diffMonths = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 30));\n    return {\n      diffDays,\n      diffMonths\n    };\n  };\n  const indexOfLastJob = currentPage * perPage;\n  const indexOfFirstJob = indexOfLastJob - perPage;\n  const currentJobs = jobs.slice(indexOfFirstJob, indexOfLastJob);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: currentJobs.map(job => {\n        const {\n          diffDays: startDiffDays,\n          diffMonths: startDiffMonths\n        } = getDateDifference(job.startDate);\n        const {\n          diffDays: endDiffDays,\n          diffMonths: endDiffMonths\n        } = getDateDifference(job.endDate);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6 col-md-12 m-b30\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-jobs-grid-style1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-media\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:8080/${job.userId.companylogo}`,\n                alt: job.userId._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"twm-job-post-duration\",\n              children: startDiffMonths > 0 ? `${startDiffMonths} month${startDiffMonths > 1 ? \"s\" : \"\"} ago` : `${startDiffDays} day${startDiffDays > 1 ? \"s\" : \"\"} ago`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-jobs-category green\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"twm-bg-sky\",\n                children: job.jobtype\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-mid-content\",\n              children: [/*#__PURE__*/_jsxDEV(NavLink, {\n                to: `/job-detail/${job._id}`,\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: job.jobcategory\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: job.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: job.website,\n                className: \"twm-job-websites site-text-primary\",\n                children: job.website\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-right-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"twm-jobs-amount\",\n                children: [job.offeredsalary, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"/ Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                to: `/job-detail/${job._id}`,\n                children: \"Browse Job\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-job-end-duration\",\n              children: endDiffMonths > 0 ? `${endDiffMonths} month${endDiffMonths > 1 ? \"s\" : \"\"} ago` : `${endDiffDays} day${endDiffDays > 1 ? \"s\" : \"\"} ago`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, job._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SectionPagination, {\n      totalItems: jobs.length,\n      perPage: perPage,\n      currentPage: currentPage,\n      paginate: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SectionJobsGrid, \"tVvkcMdonUGj2Jv5gKa++VlWdvI=\");\n_c = SectionJobsGrid;\nexport default SectionJobsGrid;\nvar _c;\n$RefreshReg$(_c, \"SectionJobsGrid\");","map":{"version":3,"names":["React","useEffect","useState","NavLink","SectionPagination","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionJobsGrid","perPage","_s","jobs","setJobs","currentPage","setCurrentPage","fetch","then","response","json","data","catch","error","console","getDateDifference","date","now","Date","dateParts","split","length","targetDate","isNaN","diffDays","diffMonths","diffTime","Math","floor","indexOfLastJob","indexOfFirstJob","currentJobs","slice","children","className","map","job","startDiffDays","startDiffMonths","startDate","endDiffDays","endDiffMonths","endDate","src","userId","companylogo","alt","_id","fileName","_jsxFileName","lineNumber","columnNumber","jobtype","to","jobcategory","location","href","website","offeredsalary","totalItems","paginate","_c","$RefreshReg$"],"sources":["C:/Project/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/jobs/section-jobs-grid.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SectionPagination from \"../common/section-pagination\";\r\n\r\nfunction SectionJobsGrid({ perPage }) {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/post-job\")\r\n      .then((response) => response.json())\r\n      .then((data) => setJobs(data))\r\n      .catch((error) => console.error(\"Error fetching jobs:\", error));\r\n  }, []);\r\n\r\n  const getDateDifference = (date) => {\r\n    const now = new Date();\r\n    const dateParts = date.split(\"/\");\r\n    if (dateParts.length === 3) {\r\n      date = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;\r\n    }\r\n\r\n    const targetDate = new Date(date);\r\n    if (isNaN(targetDate)) {\r\n      console.error(\"Invalid date:\", date);\r\n      return { diffDays: 0, diffMonths: 0 };\r\n    }\r\n\r\n    const diffTime = now - targetDate;\r\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n    const diffMonths = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 30));\r\n    return { diffDays, diffMonths };\r\n  };\r\n\r\n  const indexOfLastJob = currentPage * perPage;\r\n  const indexOfFirstJob = indexOfLastJob - perPage;\r\n  const currentJobs = jobs.slice(indexOfFirstJob, indexOfLastJob);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        {currentJobs.map((job) => {\r\n          const { diffDays: startDiffDays, diffMonths: startDiffMonths } = getDateDifference(job.startDate);\r\n          const { diffDays: endDiffDays, diffMonths: endDiffMonths } = getDateDifference(job.endDate);\r\n          return (\r\n            <div className=\"col-lg-6 col-md-12 m-b30\" key={job._id}>\r\n              <div className=\"twm-jobs-grid-style1\">\r\n                <div className=\"twm-media\">\r\n                  <img\r\n                    src={`http://localhost:8080/${job.userId.companylogo}`}\r\n                    alt={job.userId._id}\r\n                  />\r\n                </div>\r\n                <span className=\"twm-job-post-duration\">\r\n                  {startDiffMonths > 0\r\n                    ? `${startDiffMonths} month${startDiffMonths > 1 ? \"s\" : \"\"} ago`\r\n                    : `${startDiffDays} day${startDiffDays > 1 ? \"s\" : \"\"} ago`}\r\n                </span>\r\n                <div className=\"twm-jobs-category green\">\r\n                  <span className=\"twm-bg-sky\">{job.jobtype}</span>\r\n                </div>\r\n                <div className=\"twm-mid-content\">\r\n                  <NavLink to={`/job-detail/${job._id}`}>\r\n                    <h4>{job.jobcategory}</h4>\r\n                  </NavLink>\r\n                  <p>{job.location}</p>\r\n                  <a href={job.website} className=\"twm-job-websites site-text-primary\">\r\n                    {job.website}\r\n                  </a>\r\n                </div>\r\n                <div className=\"twm-right-content\">\r\n                  <div className=\"twm-jobs-amount\">\r\n                    {job.offeredsalary} <span>/ Month</span>\r\n                  </div>\r\n                  <NavLink to={`/job-detail/${job._id}`}>Browse Job</NavLink>\r\n                </div>\r\n                <div className=\"twm-job-end-duration\">\r\n                  {endDiffMonths > 0\r\n                    ? `${endDiffMonths} month${endDiffMonths > 1 ? \"s\" : \"\"} ago`\r\n                    : `${endDiffDays} day${endDiffDays > 1 ? \"s\" : \"\"} ago`}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <SectionPagination\r\n        totalItems={jobs.length}\r\n        perPage={perPage}\r\n        currentPage={currentPage}\r\n        paginate={setCurrentPage}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SectionJobsGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}