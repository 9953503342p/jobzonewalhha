{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\components\\\\jobs\\\\jobs-grid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { loadScript } from \"../../../../../globals/constants\";\nimport SectionJobsSidebar1 from \"./\";\nimport SectionJobsGrid from \"./SectionJobsGrid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobsGridPage() {\n  _s();\n  const [perPage, setPerPage] = useState(10);\n  const [filters, setFilters] = useState({\n    category: \"All Category\",\n    jobTitle: \"\",\n    location: \"\",\n    priceRange: \"\"\n  });\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    // Load custom scripts\n    loadScript(\"js/custom.js\");\n  }, []);\n  useEffect(() => {\n    // Fetching the jobs data from the API\n    fetch(\"http://localhost:8080/post-job\").then(response => response.json()).then(data => setJobs(data)).catch(error => console.error(\"Error fetching jobs:\", error));\n  }, []);\n  useEffect(() => {\n    // Filter jobs based on the current filters\n    const filtered = jobs.filter(job => {\n      const isCategoryMatch = filters.category === \"All Category\" || job.category.toLowerCase().includes(filters.category.toLowerCase());\n      const isJobTitleMatch = filters.jobTitle === \"\" || job.jobtitle.toLowerCase().includes(filters.jobTitle.toLowerCase());\n      const isLocationMatch = filters.location === \"\" || job.location.toLowerCase().includes(filters.location.toLowerCase());\n      const isPriceRangeMatch = filters.priceRange === \"\" || checkPriceRange(job.offeredsalary, filters.priceRange);\n      return isCategoryMatch && isJobTitleMatch && isLocationMatch && isPriceRangeMatch;\n    });\n    setFilteredJobs(filtered);\n  }, [filters, jobs]);\n\n  // Helper function to check price range\n  const checkPriceRange = (salary, priceRange) => {\n    const salaryValue = parseInt(salary.replace(/[^\\d.-]/g, \"\"));\n    if (priceRange === \"Below 50K\") {\n      return salaryValue < 50000;\n    }\n    if (priceRange === \"50K-100K\") {\n      return salaryValue >= 50000 && salaryValue <= 100000;\n    }\n    if (priceRange === \"100K-150K\") {\n      return salaryValue > 100000 && salaryValue <= 150000;\n    }\n    if (priceRange === \"Above 150K\") {\n      return salaryValue > 150000;\n    }\n    return true; // Default case if no price range is set\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section-full p-t120 p-b90 site-bg-white\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-4 col-md-12 rightSidebar\",\n          children: /*#__PURE__*/_jsxDEV(SectionJobsSidebar1, {\n            onFilterChange: setFilters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-8 col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(SectionJobsGrid, {\n            perPage: perPage,\n            jobs: filteredJobs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(JobsGridPage, \"gwkrh1aOEOomKUQ/WmWqzIk3zDA=\");\n_c = JobsGridPage;\nexport default JobsGridPage;\nvar _c;\n$RefreshReg$(_c, \"JobsGridPage\");","map":{"version":3,"names":["React","useState","useEffect","loadScript","SectionJobsSidebar1","SectionJobsGrid","jsxDEV","_jsxDEV","JobsGridPage","_s","perPage","setPerPage","filters","setFilters","category","jobTitle","location","priceRange","filteredJobs","setFilteredJobs","jobs","setJobs","fetch","then","response","json","data","catch","error","console","filtered","filter","job","isCategoryMatch","toLowerCase","includes","isJobTitleMatch","jobtitle","isLocationMatch","isPriceRangeMatch","checkPriceRange","offeredsalary","salary","salaryValue","parseInt","replace","className","children","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Project/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/components/jobs/jobs-grid.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { loadScript } from \"../../../../../globals/constants\";\r\nimport SectionJobsSidebar1 from \"./\";\r\nimport SectionJobsGrid from \"./SectionJobsGrid\";\r\n\r\nfunction JobsGridPage() {\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [filters, setFilters] = useState({\r\n    category: \"All Category\",\r\n    jobTitle: \"\",\r\n    location: \"\",\r\n    priceRange: \"\"\r\n  });\r\n\r\n  const [filteredJobs, setFilteredJobs] = useState([]);\r\n  const [jobs, setJobs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Load custom scripts\r\n    loadScript(\"js/custom.js\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetching the jobs data from the API\r\n    fetch(\"http://localhost:8080/post-job\")\r\n      .then((response) => response.json())\r\n      .then((data) => setJobs(data))\r\n      .catch((error) => console.error(\"Error fetching jobs:\", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Filter jobs based on the current filters\r\n    const filtered = jobs.filter((job) => {\r\n      const isCategoryMatch = filters.category === \"All Category\" || job.category.toLowerCase().includes(filters.category.toLowerCase());\r\n      const isJobTitleMatch = filters.jobTitle === \"\" || job.jobtitle.toLowerCase().includes(filters.jobTitle.toLowerCase());\r\n      const isLocationMatch = filters.location === \"\" || job.location.toLowerCase().includes(filters.location.toLowerCase());\r\n      const isPriceRangeMatch = filters.priceRange === \"\" || checkPriceRange(job.offeredsalary, filters.priceRange);\r\n      \r\n      return isCategoryMatch && isJobTitleMatch && isLocationMatch && isPriceRangeMatch;\r\n    });\r\n\r\n    setFilteredJobs(filtered);\r\n  }, [filters, jobs]);\r\n\r\n  // Helper function to check price range\r\n  const checkPriceRange = (salary, priceRange) => {\r\n    const salaryValue = parseInt(salary.replace(/[^\\d.-]/g, \"\"));\r\n    if (priceRange === \"Below 50K\") {\r\n      return salaryValue < 50000;\r\n    }\r\n    if (priceRange === \"50K-100K\") {\r\n      return salaryValue >= 50000 && salaryValue <= 100000;\r\n    }\r\n    if (priceRange === \"100K-150K\") {\r\n      return salaryValue > 100000 && salaryValue <= 150000;\r\n    }\r\n    if (priceRange === \"Above 150K\") {\r\n      return salaryValue > 150000;\r\n    }\r\n    return true; // Default case if no price range is set\r\n  };\r\n\r\n  return (\r\n    <div className=\"section-full p-t120 p-b90 site-bg-white\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4 col-md-12 rightSidebar\">\r\n            <SectionJobsSidebar1 onFilterChange={setFilters} />\r\n          </div>\r\n          <div className=\"col-lg-8 col-md-12\">\r\n            {/* Jobs Grid Component */}\r\n            <SectionJobsGrid perPage={perPage} jobs={filteredJobs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobsGridPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}