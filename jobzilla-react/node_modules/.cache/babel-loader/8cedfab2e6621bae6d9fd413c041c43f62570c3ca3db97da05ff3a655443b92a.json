{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\components\\\\jobs\\\\jobs-grid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SectionJobsSidebar1 from \"./SectionJobsSidebar1\";\nimport SectionJobsGrid from \"./SectionJobsGrid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobsGridPage() {\n  _s();\n  const [filters, setFilters] = useState({\n    category: \"All Category\",\n    jobTitle: \"\",\n    location: \"\",\n    priceRange: \"\"\n  });\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    // Fetching the jobs data from the API\n    fetch(\"http://localhost:8080/post-job\").then(response => response.json()).then(data => setJobs(data)).catch(error => console.error(\"Error fetching jobs:\", error));\n  }, []);\n  useEffect(() => {\n    // Filtering jobs based on the current filter state\n    const filtered = jobs.filter(job => {\n      return (filters.category === \"All Category\" || job.category === filters.category) && (filters.jobTitle === \"\" || job.jobtitle.toLowerCase().includes(filters.jobTitle.toLowerCase())) && (filters.location === \"\" || job.location.toLowerCase().includes(filters.location.toLowerCase())) && (filters.priceRange === \"\" || filters.priceRange === \"Below 50K\" && parseInt(job.offeredsalary.replace(/[^\\d.-]/g, \"\")) < 50000 || filters.priceRange === \"50K-100K\" && parseInt(job.offeredsalary.replace(/[^\\d.-]/g, \"\")) >= 50000 && parseInt(job.offeredsalary.replace(/[^\\d.-]/g, \"\")) <= 100000 || filters.priceRange === \"100K-150K\" && parseInt(job.offeredsalary.replace(/[^\\d.-]/g, \"\")) > 100000 && parseInt(job.offeredsalary.replace(/[^\\d.-]/g, \"\")) <= 150000 || filters.priceRange === \"Above 150K\" && parseInt(job.offeredsalary.replace(/[^\\d.-]/g, \"\")) > 150000);\n    });\n    setFilteredJobs(filtered);\n  }, [filters, jobs]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section-full p-t120 p-b90 site-bg-white\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-4 col-md-12 rightSidebar\",\n          children: /*#__PURE__*/_jsxDEV(SectionJobsSidebar1, {\n            onFilterChange: setFilters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-8 col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(SectionJobsGrid, {\n            jobs: filteredJobs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(JobsGridPage, \"L21V2p6uPGY57/aHh3dR0jBWxFg=\");\n_c = JobsGridPage;\nexport default JobsGridPage;\nvar _c;\n$RefreshReg$(_c, \"JobsGridPage\");","map":{"version":3,"names":["React","useState","useEffect","SectionJobsSidebar1","SectionJobsGrid","jsxDEV","_jsxDEV","JobsGridPage","_s","filters","setFilters","category","jobTitle","location","priceRange","filteredJobs","setFilteredJobs","jobs","setJobs","fetch","then","response","json","data","catch","error","console","filtered","filter","job","jobtitle","toLowerCase","includes","parseInt","offeredsalary","replace","className","children","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Project/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/components/jobs/jobs-grid.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SectionJobsSidebar1 from \"./SectionJobsSidebar1\";\r\nimport SectionJobsGrid from \"./SectionJobsGrid\";\r\n\r\nfunction JobsGridPage() {\r\n    const [filters, setFilters] = useState({\r\n        category: \"All Category\",\r\n        jobTitle: \"\",\r\n        location: \"\",\r\n        priceRange: \"\"\r\n    });\r\n\r\n    const [filteredJobs, setFilteredJobs] = useState([]);\r\n    const [jobs, setJobs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetching the jobs data from the API\r\n        fetch(\"http://localhost:8080/post-job\")\r\n            .then((response) => response.json())\r\n            .then((data) => setJobs(data))\r\n            .catch((error) => console.error(\"Error fetching jobs:\", error));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Filtering jobs based on the current filter state\r\n        const filtered = jobs.filter((job) => {\r\n            return (\r\n                (filters.category === \"All Category\" || job.category === filters.category) &&\r\n                (filters.jobTitle === \"\" || job.jobtitle.toLowerCase().includes(filters.jobTitle.toLowerCase())) &&\r\n                (filters.location === \"\" || job.location.toLowerCase().includes(filters.location.toLowerCase())) &&\r\n                (filters.priceRange === \"\" ||\r\n                    (filters.priceRange === \"Below 50K\" && parseInt(job.offeredsalary.replace(/[^\\d.-]/g, \"\")) < 50000) ||\r\n                    (filters.priceRange === \"50K-100K\" && parseInt(job.offeredsalary.replace(/[^\\d.-]/g, \"\")) >= 50000 && parseInt(job.offeredsalary.replace(/[^\\d.-]/g, \"\")) <= 100000) ||\r\n                    (filters.priceRange === \"100K-150K\" && parseInt(job.offeredsalary.replace(/[^\\d.-]/g, \"\")) > 100000 && parseInt(job.offeredsalary.replace(/[^\\d.-]/g, \"\")) <= 150000) ||\r\n                    (filters.priceRange === \"Above 150K\" && parseInt(job.offeredsalary.replace(/[^\\d.-]/g, \"\")) > 150000)\r\n                )\r\n            );\r\n        });\r\n        setFilteredJobs(filtered);\r\n    }, [filters, jobs]);\r\n\r\n    return (\r\n        <div className=\"section-full p-t120 p-b90 site-bg-white\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4 col-md-12 rightSidebar\">\r\n                        <SectionJobsSidebar1 onFilterChange={setFilters} />\r\n                    </div>\r\n                    <div className=\"col-lg-8 col-md-12\">\r\n                        <SectionJobsGrid jobs={filteredJobs} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JobsGridPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}