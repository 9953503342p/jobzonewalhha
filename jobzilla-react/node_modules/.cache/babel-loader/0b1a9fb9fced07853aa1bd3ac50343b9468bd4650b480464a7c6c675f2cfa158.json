{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\jobs\\\\detail\\\\section-job-location.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SectionJobLocation() {\n  _s();\n  const [job, setJob] = useState(null);\n  const {\n    jobId\n  } = useParams();\n  useEffect(() => {\n    // Fetch job data from the API\n    const fetchJobData = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/post-job/${jobId}`);\n        const data = await response.json();\n        setJob(data); // Set the fetched job data\n      } catch (error) {\n        console.error('Error fetching job data:', error);\n      }\n    };\n    fetchJobData();\n  }, [jobId]);\n  if (!job) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading job details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  console.log(job);\n  const {\n    latitude,\n    longitude\n  } = job; // Get latitude and longitude from the job data\n  const mapSrc = latitude && longitude ? `https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3304.8534521658976!2d${longitude}!3d${latitude}!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x80c2c6fd9829c6f3%3A0x6ecd11bcf4b0c23a!2s1363%20Sunset%20Blvd%2C%20Los%20Angeles%2C%20CA%2090026%2C%20USA` : ''; // Build map link using latitude and longitude\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"twm-s-title\",\n      children: \"Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"twm-m-map mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twm-m-map-iframe\",\n        children: latitude && longitude ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n          height: 310,\n          src: mapSrc,\n          title: \"Job Location\",\n          frameBorder: \"0\",\n          style: {\n            border: 0\n          },\n          allowFullScreen: \"\",\n          \"aria-hidden\": \"false\",\n          tabIndex: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No location available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SectionJobLocation, \"ZkpZKUUxN/UrHbCiAchdLSF4CSc=\", false, function () {\n  return [useParams];\n});\n_c = SectionJobLocation;\nexport default SectionJobLocation;\nvar _c;\n$RefreshReg$(_c, \"SectionJobLocation\");","map":{"version":3,"names":["useState","useEffect","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionJobLocation","_s","job","setJob","jobId","fetchJobData","response","fetch","process","env","REACT_APP_API_URL","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","log","latitude","longitude","mapSrc","className","height","src","title","frameBorder","style","border","allowFullScreen","tabIndex","_c","$RefreshReg$"],"sources":["C:/Project/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/jobs/detail/section-job-location.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction SectionJobLocation() {\n  const [job, setJob] = useState(null);\n\n  const { jobId } = useParams(); \n\n  useEffect(() => {\n    // Fetch job data from the API\n    const fetchJobData = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/post-job/${jobId}`);\n        const data = await response.json();\n        setJob(data); // Set the fetched job data\n      } catch (error) {\n        console.error('Error fetching job data:', error);\n      }\n    };\n\n    fetchJobData();\n  }, [jobId]);\n\n  if (!job) {\n    return <p>Loading job details...</p>;\n  }\n\n  console.log(job);\n  const { latitude, longitude } = job; // Get latitude and longitude from the job data\n  const mapSrc = latitude && longitude\n    ? `https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3304.8534521658976!2d${longitude}!3d${latitude}!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x80c2c6fd9829c6f3%3A0x6ecd11bcf4b0c23a!2s1363%20Sunset%20Blvd%2C%20Los%20Angeles%2C%20CA%2090026%2C%20USA`\n    : ''; // Build map link using latitude and longitude\n\n  return (\n    <>\n      <h4 className=\"twm-s-title\">Location</h4>\n      <div className=\"twm-m-map mb-5\">\n        <div className=\"twm-m-map-iframe\">\n          {latitude && longitude ? (\n            <iframe\n              height={310}\n              src={mapSrc}\n              title=\"Job Location\"\n              frameBorder=\"0\"\n              style={{ border: 0 }}\n              allowFullScreen=\"\"\n              aria-hidden=\"false\"\n              tabIndex=\"0\"\n            />\n          ) : (\n            <p>No location available</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SectionJobLocation;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEpC,MAAM;IAAEW;EAAM,CAAC,GAAGT,SAAS,CAAC,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,aAAaN,KAAK,EAAE,CAAC;QAClF,MAAMO,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCT,MAAM,CAACQ,IAAI,CAAC,CAAC,CAAC;MAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDR,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACD,KAAK,CAAC,CAAC;EAEX,IAAI,CAACF,GAAG,EAAE;IACR,oBAAOL,OAAA;MAAAkB,QAAA,EAAG;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACtC;EAEAL,OAAO,CAACM,GAAG,CAAClB,GAAG,CAAC;EAChB,MAAM;IAAEmB,QAAQ;IAAEC;EAAU,CAAC,GAAGpB,GAAG,CAAC,CAAC;EACrC,MAAMqB,MAAM,GAAGF,QAAQ,IAAIC,SAAS,GAChC,8EAA8EA,SAAS,MAAMD,QAAQ,+JAA+J,GACpQ,EAAE,CAAC,CAAC;;EAER,oBACExB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA;MAAI2B,SAAS,EAAC,aAAa;MAAAT,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzCtB,OAAA;MAAK2B,SAAS,EAAC,gBAAgB;MAAAT,QAAA,eAC7BlB,OAAA;QAAK2B,SAAS,EAAC,kBAAkB;QAAAT,QAAA,EAC9BM,QAAQ,IAAIC,SAAS,gBACpBzB,OAAA;UACE4B,MAAM,EAAE,GAAI;UACZC,GAAG,EAAEH,MAAO;UACZI,KAAK,EAAC,cAAc;UACpBC,WAAW,EAAC,GAAG;UACfC,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAE,CAAE;UACrBC,eAAe,EAAC,EAAE;UAClB,eAAY,OAAO;UACnBC,QAAQ,EAAC;QAAG;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,gBAEFtB,OAAA;UAAAkB,QAAA,EAAG;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAC5B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP;AAAClB,EAAA,CArDQD,kBAAkB;EAAA,QAGPL,SAAS;AAAA;AAAAsC,EAAA,GAHpBjC,kBAAkB;AAuD3B,eAAeA,kBAAkB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}