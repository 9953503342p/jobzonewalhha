{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\Internship\\\\section-Internship-grid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport SectionPagination from \"../common/section-pagination\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SectionInternshipsGrid({\n  perPage,\n  filters\n}) {\n  _s();\n  const [jobs, setJobs] = useState([]); // Store all internships\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // Fetch internships based on filters\n  useEffect(() => {\n    const fetchInternships = async () => {\n      try {\n        const queryParams = new URLSearchParams(filters).toString();\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/get-internships?${queryParams}`);\n        const data = await response.json();\n\n        // Ensure data is always an array\n        if (Array.isArray(data)) {\n          setJobs(data);\n        } else {\n          console.error(\"Expected an array but got:\", data);\n          setJobs([]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching internships:\", error);\n        setJobs([]);\n      }\n    };\n    fetchInternships();\n  }, [filters]);\n\n  // Calculate the date difference for each job\n  const getDateDifference = startDate => {\n    const now = new Date();\n    const dateParts = startDate.split(\"/\");\n    if (dateParts.length === 3) {\n      startDate = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;\n    }\n    const start = new Date(startDate);\n    if (isNaN(start)) {\n      console.error(\"Invalid start date:\", startDate);\n      return {\n        diffDays: 0,\n        diffMonths: 0\n      };\n    }\n    const diffTime = now - start;\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n    const diffMonths = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 30));\n    return {\n      diffDays,\n      diffMonths\n    };\n  };\n\n  // Pagination logic\n  const indexOfLastJob = currentPage * perPage;\n  const indexOfFirstJob = indexOfLastJob - perPage;\n  const currentJobs = jobs.slice(indexOfFirstJob, indexOfLastJob);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: currentJobs.map(job => {\n        const {\n          diffDays,\n          diffMonths\n        } = getDateDifference(job.startDate);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6 col-md-12 m-b30\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-jobs-grid-style1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-media\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:8080/${job.userId.companylogo}`,\n                alt: job.userId._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"twm-job-post-duration\",\n              children: diffMonths > 0 ? `${diffMonths} month${diffMonths > 1 ? \"s\" : \"\"} ago` : `${diffDays} day${diffDays > 1 ? \"s\" : \"\"} ago`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-jobs-category green\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"twm-bg-sky\",\n                children: job.jobtype\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-mid-content\",\n              children: [/*#__PURE__*/_jsxDEV(NavLink, {\n                to: `/job-detail/${job._id}`,\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: job.jobcategory\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: job.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: job.website,\n                className: \"twm-job-websites site-text-primary\",\n                children: job.website\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-right-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"twm-jobs-amount\",\n                children: [job.offeredsalary, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"/ Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                to: `/job-detail/${job._id}`,\n                children: \"Browse Job\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, job._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SectionPagination, {\n      totalItems: jobs.length,\n      perPage: perPage,\n      currentPage: currentPage,\n      paginate: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SectionInternshipsGrid, \"tVvkcMdonUGj2Jv5gKa++VlWdvI=\");\n_c = SectionInternshipsGrid;\nexport default SectionInternshipsGrid;\nvar _c;\n$RefreshReg$(_c, \"SectionInternshipsGrid\");","map":{"version":3,"names":["React","useEffect","useState","NavLink","SectionPagination","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionInternshipsGrid","perPage","filters","_s","jobs","setJobs","currentPage","setCurrentPage","fetchInternships","queryParams","URLSearchParams","toString","response","fetch","process","env","REACT_APP_API_URL","data","json","Array","isArray","console","error","getDateDifference","startDate","now","Date","dateParts","split","length","start","isNaN","diffDays","diffMonths","diffTime","Math","floor","indexOfLastJob","indexOfFirstJob","currentJobs","slice","children","className","map","job","src","userId","companylogo","alt","_id","fileName","_jsxFileName","lineNumber","columnNumber","jobtype","to","jobcategory","location","href","website","offeredsalary","totalItems","paginate","_c","$RefreshReg$"],"sources":["C:/Project/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/Internship/section-Internship-grid.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SectionPagination from \"../common/section-pagination\";\r\n\r\nfunction SectionInternshipsGrid({ perPage, filters }) {\r\n  const [jobs, setJobs] = useState([]); // Store all internships\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  // Fetch internships based on filters\r\n  useEffect(() => {\r\n    const fetchInternships = async () => {\r\n      try {\r\n        const queryParams = new URLSearchParams(filters).toString();\r\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/get-internships?${queryParams}`);\r\n        const data = await response.json();\r\n\r\n        // Ensure data is always an array\r\n        if (Array.isArray(data)) {\r\n          setJobs(data);\r\n        } else {\r\n          console.error(\"Expected an array but got:\", data);\r\n          setJobs([]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching internships:\", error);\r\n        setJobs([]);\r\n      }\r\n    };\r\n\r\n    fetchInternships();\r\n  }, [filters]);\r\n\r\n  // Calculate the date difference for each job\r\n  const getDateDifference = (startDate) => {\r\n    const now = new Date();\r\n    const dateParts = startDate.split(\"/\");\r\n    if (dateParts.length === 3) {\r\n      startDate = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;\r\n    }\r\n\r\n    const start = new Date(startDate);\r\n    if (isNaN(start)) {\r\n      console.error(\"Invalid start date:\", startDate);\r\n      return { diffDays: 0, diffMonths: 0 };\r\n    }\r\n\r\n    const diffTime = now - start;\r\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n    const diffMonths = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 30));\r\n    return { diffDays, diffMonths };\r\n  };\r\n\r\n  // Pagination logic\r\n  const indexOfLastJob = currentPage * perPage;\r\n  const indexOfFirstJob = indexOfLastJob - perPage;\r\n  const currentJobs = jobs.slice(indexOfFirstJob, indexOfLastJob);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        {currentJobs.map((job) => {\r\n          const { diffDays, diffMonths } = getDateDifference(job.startDate);\r\n          return (\r\n            <div className=\"col-lg-6 col-md-12 m-b30\" key={job._id}>\r\n              <div className=\"twm-jobs-grid-style1\">\r\n                <div className=\"twm-media\">\r\n                  <img\r\n                    src={`http://localhost:8080/${job.userId.companylogo}`}\r\n                    alt={job.userId._id}\r\n                  />\r\n                </div>\r\n                <span className=\"twm-job-post-duration\">\r\n                  {diffMonths > 0\r\n                    ? `${diffMonths} month${diffMonths > 1 ? \"s\" : \"\"} ago`\r\n                    : `${diffDays} day${diffDays > 1 ? \"s\" : \"\"} ago`}\r\n                </span>\r\n                <div className=\"twm-jobs-category green\">\r\n                  <span className=\"twm-bg-sky\">{job.jobtype}</span>\r\n                </div>\r\n                <div className=\"twm-mid-content\">\r\n                  <NavLink to={`/job-detail/${job._id}`}>\r\n                    <h4>{job.jobcategory}</h4>\r\n                  </NavLink>\r\n                  <p>{job.location}</p>\r\n                  <a href={job.website} className=\"twm-job-websites site-text-primary\">\r\n                    {job.website}\r\n                  </a>\r\n                </div>\r\n                <div className=\"twm-right-content\">\r\n                  <div className=\"twm-jobs-amount\">\r\n                    {job.offeredsalary} <span>/ Month</span>\r\n                  </div>\r\n                  <NavLink to={`/job-detail/${job._id}`}>Browse Job</NavLink>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <SectionPagination\r\n        totalItems={jobs.length}\r\n        perPage={perPage}\r\n        currentPage={currentPage}\r\n        paginate={setCurrentPage}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SectionInternshipsGrid;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}